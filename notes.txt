index.html - in body-root div - I have to link the index.js (document.getElementById('root')) with index.html, basically in the root div (in index.html) I write all the React code

rafce - shortcut to create React arrow function component


app__navbar: BEM (block element modifier)

var(--color-black) -> css variable which is defined in index.css where are defined the most used colors in the website 

z-index: 5 -> the overlay will apear over the actual page



@media screen and (max-width: 1150px) {
  .app__navbar-links {
    display: none;
  }
  
  .app__navbar-smallscreen{
  display: flex;
  }
}
-> On big screen I want to hide the navbarlinks but to show the hamburgermenu for small screens


useState() allow us to do some dynamic changes when I click something on depending on some kind of parameters


Imline style: <div style={{marginBottom: '1rem'}}>

Passing a prop when creating a new component, you can pass specific properties into it and then you can pass some values
Ex:
Header.jsx
   <SubHeading title="Chase the new flavour" />

The value of title will be passed in SubHeading.jsx inside of props object, using dynamic rendering inside jsx .
const SubHeading = ({title}) => (
  //<div style={{ marginBottom: "1rem" }}>
    <p className="p__cormorant">{title}</p>
    //<img src={images.spoon} alt="spoon" className="spoon__img" />
  </div>
);

imset is used when we have absolute position and it allows us to more easily correspond the top and bottom or left and right values.

flex:1 -> pushes everything to the left side

max-width -> I want to apply for devices with max width 0-650px 

A video is a self-closing html5 tag 

useRef returns a mutable ref object whose .current property is initialized to the passed argument (initialValue). The returned object will persist for the full lifetime of the component.
Note that useRef() is useful for more than the ref attribute. It’s handy for keeping any mutable value around similar to how you’d use instance fields in classes.

When you want to change the state using the previous state you have to pass a callback funtion inside setState:
 const handleVideo=()=>{
  setPlayVideo((prevPlayVideo)=>!prevPlayVideo)
  }
--> If the playVideo is true, we're going to toggle it off and if it's off we're toggle it on.

The current videoRef:
<video
        src={meal}
        ref={videoRef}
        type="video/mp4"
        loop
        controls="false"
        muted
      />
      
if (playVideo) {
      videoRef.current.pause();
    } else {
      videoRef.current.play();
    }
  };
--> If videoPlay is true --> pause() else play()

overflow-x: scroll;
  -ms-overflow-style:none; (I want to scrol over images but I don't want to see that scroll bar)


Cum sunt asezate direct in header text si imaginea fara stilizare, flex etc?
